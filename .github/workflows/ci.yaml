name: Common PR Validation

on:
  workflow_call:
    inputs:
      logfile:
        description: "The file to write logs to"
        required: true
        type: string
      run-public-build:
        description: "Whether to run public build stage"
        required: true
        type: boolean
      public-build-action:
        description: "What actions to run for the public build stage"
        required: false
        default: echo "No public build stage action specified"
        type: string
      public-build-action-failure:
        description: "What actions to run if the public build stage fails"
        required: false
        default: echo "No public build failure action specified"
        type: string
      run-public-test:
        description: "Whether to run public test stage"
        required: true
        type: boolean        
      public-tests-action:
        description: "What actions to run for the public testing stage"
        required: false
        default: echo "No public test stage action specified"
        type: string
      public-tests-action-failure:
        description: "What actions to run if the public testing stage fails"
        required: false
        default: echo "No public testing failure action specified"
        type: string     
      run-private-build:
        description: "Whether to run private build stage"
        required: true
        type: boolean
      private-build-action:
        description: "What actions to run for the private build stage"
        required: false
        default: echo "No private build stage action specified"
        type: string
      private-build-action-failure:
        description: "What actions to run if the private build stage fails"
        required: false
        default: echo "No private build failure action specified"
        type: string        
      run-private-test:
        description: "Whether to run private test stage"
        required: true
        type: boolean        
      private-tests-action:
        description: "What actions to run for the private testing stage"
        required: false
        default: echo "No private testing stage action specified"
        type: string
      private-tests-action-failure:
        description: "What actions to run if the private testing stage fails"
        required: false
        default: echo "No private testing failure action specified"
        type: string

jobs:
  Starting:
    runs-on: ubuntu-latest
    steps:
      - name: Display CI Info
        run: |
          echo PR validation starting for the following:
          echo org: ${{ github.event.repository.owner.login }}
          echo repo: ${{ github.event.repository.name }}
          echo pr: ${{ github.event.pull_request.number }}:
          echo commit: ${{ github.event.pull_request.head.sha }}
          echo action: ${{ github.event.action }}

      # Run assignment action
      - name: Assign reviewers and assignees
        uses: dm-vdo/vdo-auto-assign@main
        with:
          token: ${{ github.token }}

      - name: Remove all known labels
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          labels: verification needed, untested, public build running, public build done, public build failed, public testing running, public testing done, public testing failed, private build running, private build done, private build failed, private testing running, private testing done, private testing failed
          type: remove

  Verifying:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Start verification
        run: echo Verification Start

      - name: Check for org membership
        id: is_organization_member
        uses: jamessingleton/is-organization-member@1.0.0
        with:
          organization: dm-vdo
          username: ${{ github.actor }}
          token: ${{ github.token }}

      - name: Add untested label
        if: ${{ steps.is_organization_member.outputs.result == 'true' }}
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: untested
          type: add

      - name: Add verification needed
        if: ${{ steps.is_organization_member.outputs.result == 'false' }}
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: verification needed
          type: add

      - name: Wait for verification
        if: ${{ steps.is_organization_member.outputs.result == 'false' }}
        uses: trstringer/manual-approval@v1
        timeout-minutes: 1440
        with:
          secret: ${{ github.token }}
          approvers: bjohnsto, c2redhat, lorelei-sakai, raeburn, rhawalsh
          minimum-approvals: 1
          issue-title: "Verifying pull request for testing"
          issue-body: "Please approve or deny the testing of this pull request."
          exclude-workflow-initiator-as-approver: false

      - name: Remove verification needed label
        if: ${{ steps.is_organization_member.outputs.result == 'false' }}
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: verification needed
          type: remove

  Public-Build-Stage:
    if: ${{ inputs.run-public-build || github.event.pull_request.draft == false }}
    runs-on: [self-hosted, untrusted]
    needs: [Verifying]
    steps:
      - name: Start Public
        run: echo "Public Build Stage Starting"

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Remove untested label
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: untested
          type: remove

      - name: Add public build running
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: public build running
          type: add

      - name: Public build action
        run: ${{ inputs.public-build-action }}

      - name: Public build failure action
        if: failure()
        run: ${{ inputs.public-build-fail-action }}

      - name: Remove public build running label
        if: always()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: public build running
          type: remove

      - name: Add public build success
        if: success()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: public build done
          type: add

      - name: Add public build failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: public build failed
          type: add

  Public-Test-Stage:
    if: ${{ inputs.run-public-test || github.event.pull_request.draft == false }}
    runs-on: [self-hosted, untrusted]
    needs: [Verifying, Public-Build-Stage]
    steps:
      - name: Start Public
        run: echo "Public Test Stage Starting"

      - name: Add public testing running
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: public testing running
          type: add

      - name: Public testing action
        run: ${{ inputs.public-tests-action }}

      - name: Public testing failure action
        if: failure()
        run: ${{ inputs.public-tests-fail-action }}

      - name: Remove public testing running label
        if: always()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: public testing running
          type: remove

      - name: Add public testing success
        if: success()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: public testing done
          type: add

      - name: Add public testing failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: public testing failed
          type: add

      - name: Upload test results
        if: failure()
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          files: logs/**/*.xml

      - name: Upload logfiles
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.LOGFILE }}
          path: logs/*/*.log
          retention-days: 5

  Private-Build-Stage:
    if: ${{ inputs.run-private-build || github.event.pull_request.draft == false }}
    runs-on: [self-hosted, trusted]
    needs: [Verifying]
    steps:
      - name: Private Stage
        run: echo "Private Build Stage Starting"

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Remove untested label
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: untested
          type: remove

      - name: Add private build running
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: private build running
          type: add

      - name: Private build action
        run: ${{ inputs.private-build-action }}

      - name: Private build failure action
        if: failure()
        run: ${{ inputs.private-build-fail-action }}

      - name: Remove private build running label
        if: always()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: private build running
          type: remove

      - name: Add private build success
        if: success()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: private build done
          type: add

      - name: Add private build failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: private build failed
          type: add

  Private-Test-Stage:
    if: ${{ inputs.run-private-test || github.event.pull_request.draft == false }}
    runs-on: [self-hosted, trusted]
    needs: [Verifying, Private-Build-Stage]
    steps:
      - name: Start Public
        run: echo "Private Test Stage Starting"

      - name: Add private testing running label
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: private testing running
          type: add

      - name: Private testing action
        run: ${{ inputs.private-tests-action }}

      - name: Private testing failure action
        if: failure()
        run: ${{ inputs.private-tests-action-failure }}

      - name: Remove private testing running label
        if: always()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: private testing running
          type: remove

      - name: Add private testing success
        if: success()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: private testing done
          type: add

      - name: Add private testing failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          label: private testing failed
          type: add

      - name: Copy logfiles
        if: failure()
        run: |
          cp -a logs /permabit/user/bunsen/artifacts/${{ inputs.logfile }}
