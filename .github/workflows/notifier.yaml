name: Notify

on:
  schedule:
    - cron: '0 0,2,10,12,14,16,18,20,22 * * 1-5'
  workflow_dispatch:

jobs:
  notify_schedule:
    env:
      ORG: ${{ github.repository_owner }}
    runs-on: ubuntu-latest
    steps:
      - name: Notify PRs Summary
        uses: octokit/graphql-action@v2.x
        id: prs_summary
        with:
          query: |
            query allPRCounts(
              $reviewQuery: String!,
              $feedbackQuery: String!,
              $approvalQuery: String!
            ) {
              needReview: search(type: ISSUE, query: $reviewQuery, last: 100) {
                issueCount
              }
              withFeedback: search(type: ISSUE, query: $feedbackQuery, last: 100) {
                issueCount
              }
              withApproval: search(type: ISSUE, query: $approvalQuery, last: 100) {
                issueCount
              }
            }
          variables: |
            reviewQuery: "org:${{env.ORG}} state:open is:pr -label:\"on hold\" draft:false review:required"
            feedbackQuery: "org:${{env.ORG}} state:open is:pr -label:\"on hold\" draft:false review:changes_requested"
            approvalQuery: "org:${{env.ORG}} state:open is:pr -label:\"on hold\" draft:false review:approved"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Set environment variables at job level for proper access
      - name: Set PR counts
        id: set_counts
        run: |
          REVIEW_COUNT="${{ fromJSON(steps.prs_summary.outputs.data).needReview.issueCount }}"
          REPLY_COUNT="${{ fromJSON(steps.prs_summary.outputs.data).withFeedback.issueCount }}"
          APPROVE_COUNT="${{ fromJSON(steps.prs_summary.outputs.data).withApproval.issueCount }}"

          echo "REVIEW_COUNT=${REVIEW_COUNT}" >> $GITHUB_OUTPUT
          echo "REPLY_COUNT=${REPLY_COUNT}" >> $GITHUB_OUTPUT
          echo "APPROVE_COUNT=${APPROVE_COUNT}" >> $GITHUB_OUTPUT

          echo "Review Count: ${REVIEW_COUNT}"
          echo "Reply Count: ${REPLY_COUNT}"
          echo "Approval Count: ${APPROVE_COUNT}"

      - name: Send a message into channel
        id: message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.GITHUB_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "Something is happening and is in action"
              
      - name: Send Slack notification
        uses: slackapi/slack-github-action@v2.0.0
        if: ${{ steps.set_counts.outputs.REVIEW_COUNT > 0 || steps.set_counts.outputs.REPLY_COUNT > 0 || steps.set_counts.outputs.APPROVE_COUNT > 0 }}
        with:
          webhook: ${{ secrets.SLACKMSG_TEST }}
          webhook-type: webhook-trigger
          payload: |
              unfurl_links : false,
              unfurl_media : false,           
              "PR_MSG_REVIEWS" : "${{ steps.set_counts.outputs.REVIEW_COUNT }} PRs requesting a review",
              "PR_MSG_REPLIES" : "${{ steps.set_counts.outputs.REPLY_COUNT }} PRs with review feedback",
              "PR_MSG_APPROVALS" : "${{ steps.set_counts.outputs.APPROVE_COUNT }} PRs with review approval",
              "PR_LINK_REVIEWS" : "https://github.com/search?q=org%3A${{env.ORG}}%20type%3Apr%20is%3Aopen%20-label%3A%22on%20hold%22%20draft%3Afalse%20review%3Arequired&type=pullrequests",
              "PR_LINK_REPLIES" : "https://github.com/search?q=org%3A${{env.ORG}}%20type%3Apr%20is%3Aopen%20-label%3A%22on%20hold%22%20draft%3Afalse%20review%3Achanges_requested&type=pullrequests",
              "PR_LINK_APPROVALS" : "https://github.com/search?q=org%3A${{env.ORG}}%20type%3Apr%20is%3Aopen%20-label%3A%22on%20hold%22%20draft%3Afalse%20review%3Aapproved&type=pullrequests"
